{"data":{"prismicPost":{"id":"7ec700af-3609-57e7-8c67-ca312c97dd17","data":{"post_title":{"text":"Comment résoudre l'erreur window is not defined dans GatsbyJS ?"},"post_preview_description":{"text":"Vous obtenez l'erreur \"window is not defined\" lorsque l'exécution du build de Gatsby résulte d'une tentative d'accès à la fenêtre côté serveur, où elle n'est pas définie. Pour résoudre ce problème, vous pouvez vérifier si elle est définie ou non avant de l'utiliser ou d'importer un module qui l'est."},"post_body":[{"__typename":"PrismicPostPostBodyText","id":"589a6c00-4535-56f1-ac4b-0b16470bc6fa","primary":{"rich_text":{"html":"<p>Vous obtenez l&#39;erreur &quot;window is not defined&quot; lorsque l&#39;exécution du build de Gatsby résulte d&#39;une tentative d&#39;accès à la fenêtre côté serveur, où elle n&#39;est pas définie. Pour résoudre ce problème, vous pouvez vérifier si elle est définie ou non avant de l&#39;utiliser ou d&#39;importer un module qui l&#39;est.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"1e322a37-79b2-5c41-8028-1349902da156","primary":{"hn":{"text":"En ajoutant une condition","html":"<h2>En ajoutant une condition</h2>"}}},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"e5903883-e30e-51a4-b4aa-a2c0fa83b50d","primary":{"code_snippet":{"text":"const isBrowser = typeof window !== `undefined`"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyText","id":"7112ef21-ac76-5ccf-b9ab-c9b8888a5b96","primary":{"rich_text":{"html":"<p>Maintenant vous pouvez utiliser isBrowser quand vous essayez d&#39;accéder à l&#39;objet Javascript WIndow. Par exemple :</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"7fabbb69-5715-57be-8379-64b40580d024","primary":{"code_snippet":{"text":"if (isBrowser) {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      }\n}"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyText","id":"58514dc3-cca6-559c-b22e-063ab89ab27a","primary":{"rich_text":{"html":"<p>Vous pouvez également conditionné l&#39;import d&#39;un module javascript comme <em>Leaflet</em> par exemple. En effet dès son import <em>Leaflet</em> tente d&#39;accéder à l&#39;objet <em>window</em>. Pour régler ça :</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"3380fdcf-4e93-5555-8212-dbd6e120b411","primary":{"code_snippet":{"text":"if (isBrowser) {\n    const leaflet = require(\"leaflet.js\")\n}"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyHn","id":"55ceba0d-cb43-5836-871c-4465320d80c4","primary":{"hn":{"text":"Modifier la configuration de Webpack","html":"<h2>Modifier la configuration de Webpack</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"06c86caa-efbc-5387-b536-0dafa80b784a","primary":{"rich_text":{"html":"<p>Finalement vous pouvez également configurer <em>Webpack</em> pour ignorer des modules pendant le build côté serveur en ajoutant le code suivant dans le fichier <em>gatsby-node.js </em>à la racine</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"b056d7cc-6323-57dc-908b-96ec927bc7bb","primary":{"code_snippet":{"text":"exports.onCreateWebpackConfig = ({ stage, loaders, actions }) => {\n    if (stage === \"build-html\") {\n        actions.setWebpackConfig({\n            module: {\n                rules: [\n                    {\n                        test: /moduleName/,\n                        use: loaders.null(),\n                    },\n                ],\n            },\n        })\n    }\n}"},"language":{"text":"javascript"}}}],"post_hero_image":{"alt":"Illustration gatsby js","dimensions":{"height":657,"width":996},"localFile":null}}}},"pageContext":{"uid":"gatsby-error-window-is-not-defined","category":"gatsby"}}