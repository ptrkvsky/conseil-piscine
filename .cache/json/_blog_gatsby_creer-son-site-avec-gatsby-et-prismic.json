{"data":{"prismicPost":{"id":"d1211f81-a788-5314-83a0-b2675b2f5f3e","data":{"post_title":{"text":"Créer son site avec Gatsby et Prismic"},"post_preview_description":{"text":"Adieu Wordpress, bonjour Prismic !  Utiliser la toute puissance de Gatsby avec Prismic. Ce C.M.S simple, puissant et modulable."},"post_body":[{"__typename":"PrismicPostPostBodyText","id":"95912335-23b9-5634-9428-87f052f2e0b5","primary":{"rich_text":{"html":"<p><em>Retrouvez l&#39;ensemble du code source utilisé pour faire ce tutorial sur <a  href=\"https://github.com/ptrkvsky/tuto-gatsby-prismic-phase-1\">ce dépôt github</a></em><br /><br /><a  href=\"https://gatsbyjs.org\">Gatsby</a> est un framework javascript permettant la création de site web statique en React de manière simple. Gatsby est réputé pour ses performances exceptionnelles. Mais attention c&#39;est le site généré qui est statique, des fichiers HTML/JS simples, le contenu récupéré au préalable pour construire ses pages peut-être quand à lui être dynamique. Nous allons ainsi connecter Gatsby à un C.M.S. <em>headless </em> c&#39;est à dire sans front, mais <a  href=\"https://headlesscms.org/\">les C.M.S. headless ne manquent pas</a>. Ma préférence va à <a  href=\"https://prismic.io/\"><em>Prismic</em></a> car il dispose d&#39;une feature très intéressante les slices, nous aurons le temps d&#39;y revenir un peu plus tard.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"72b72e2e-f487-5d65-9553-c6e79cd23cb0","primary":{"hn":{"text":"Installer Gatsby","html":"<h2>Installer Gatsby</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"59081135-5aae-5c40-8017-1ff264ea5715","primary":{"rich_text":{"html":"<p>Vous devez au préalable avoir <a  href=\"https://nodejs.org/en/\">Node</a> d’installer sur votre machine mac, linux, ou windows.<a  href=\"https://nodejs.org/en/\"><br /></a>J’utilise actuellement la version 13.7 et npm dans sa version v6. Veillez surtout à avoir au moins la version 9 de Node, Gatsby est en train d&#39;arrêter<a  href=\"https://www.gatsbyjs.org/blog/2020-03-20-dropping-support-for-node-8/\"> le support des anciennes versions. </a><br />Vous pouvez vérifier que node et npm sont bien installés en utilisant la commande suivante.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"59ed6abd-b3a0-5a1d-b817-5814bffb8e4c","primary":{"code_snippet":{"text":"$ node -v\nv13.10.1\n$ npm -v\n6.13.7"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyText","id":"ba66bd0e-fc63-5e89-a251-782c34623764","primary":{"rich_text":{"html":"<p><strong>Node et npm sont installés </strong>nous allons pouvoir commencer ! Nous allons commencer par<strong> installer Gatsby C.L.I. </strong>(command line interface) pour pouvoir installer nos sites rapidement en ligne de commande et se sentir développeur.<br />Dans votre invite de commande, veuillez saisir :</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"4f04be45-9b80-5f7d-b579-ef40fa7988d0","primary":{"code_snippet":{"text":"$ npm install -g gatsby-cli"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyText","id":"58653f1e-30a0-5f97-8ca0-13c18d48ded6","primary":{"rich_text":{"html":"<p>Gatsby est maintenant installé sur votre machine vous maintenant utiliser tout une série de commande qui commencent toutes par <em>Gatsby. </em>Pour les connaitre vous pouvez toujours taper </p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"1b8d2bd0-3e2f-5335-a07f-622b55ff164a","primary":{"code_snippet":{"text":"$ gatsby -help"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyHn","id":"4eb06698-d5e2-5890-bb3b-ca772c6c477f","primary":{"hn":{"text":"Créer son site Gatsby","html":"<h2>Créer son site Gatsby</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"9b973e3c-520a-596d-b73c-f456ed70a401","primary":{"rich_text":{"html":"<p>Placez vous dans le dossier où vous souhaitez installer votre site, par habitude j&#39;ai un dossier www qui contient l&#39;ensemble de mes sites.<br /> Ensuite pour créer votre site ce sera <em>gatsby new [rootpah] [starter] </em></p><ul><li><em>rootpath</em> : c&#39;est le nom du dossier dans lequel vos fichier seront installés. Paramètre optionnel</li><li><em>starter :  </em>second paramètre optionnel, les starter sont une sorte de thème, ils vont vous aider à démarrer en vous fournissant, un style (un peu à la manière d&#39;un thème WP) et/ou les moyens pour récupérer vos contenus distants (Wordpress, Contentful, Prismic, fichiers markdown). Si vous ne précisez aucun starter. C&#39;est<a  href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-default/\"> le starter par défaut</a> qui sera installé<br /></li></ul><p>C&#39;est ce que nous allons faire, nous utiliserons une installation minimale et ajouterons petit à petit les composants dont nous aurons besoin. Dans votre dossier vous pouvez donc saisir</p><p><em><br /><br /></em></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"e8e56b38-861d-583b-a9f8-4f45f1519d02","primary":{"code_snippet":{"text":"gatsby new mon_incroyable_site_avec_gatsby"},"language":{"text":"vim "}}},{"__typename":"PrismicPostPostBodyText","id":"a5ecd53c-7dc8-5e79-8a0e-0c21eb92ca16","primary":{"rich_text":{"html":"<p>Après quelques minutes votre site devrait être installé ✌️</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"0ce87bcc-7793-5139-985f-c5854f538a36","primary":{"image":{"alt":"Installation gatsby ok","dimensions":{"height":251,"width":650},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"12b94651-7e37-58b9-8f85-4ef4e7241500","primary":{"rich_text":{"html":"<p>Une fois le site installé vous pouvez, vous placer dans le dossier créer (pour moi 02-gatsby-blogv2)</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"41d131de-2ff0-5cd9-a407-b4481f4338b1","primary":{"code_snippet":{"text":"cd 02-gatsby-blogv2"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyText","id":"585baa0c-c841-56ca-941a-5d495164b454","primary":{"rich_text":{"html":"<p>Et enfin démarrer votre site avec la commande : </p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"aa229565-e3f5-52b8-9afe-ce957bd1c0c0","primary":{"code_snippet":{"text":"gatsby develop"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyText","id":"3d1beba6-5e2d-596b-8425-3d813ec0b38b","primary":{"rich_text":{"html":"<p>Je pensais pouvoir sabrer le champagne à ce moment mais c’était sans compter le drame, un petit problème d’installation de module. Pas de panique le problème a été réglé rapidement comme le montre la capture ci dessous, suppression du dossier incriminé et réinstallation.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"0becb018-e690-5786-b519-fef2a0213313","primary":{"image":{"alt":"error gatsby","dimensions":{"height":972,"width":826},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"1700324e-9ea2-5652-bc9e-11b031d08501","primary":{"rich_text":{"html":"<p>Ce problème réglé j’ai pu relancer ma commande de démarrage  et contempler mon magnifique site.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"1bed7431-adb3-54bb-be2c-87c3291a38ed","primary":{"image":{"alt":"Gatsby default starter","dimensions":{"height":712,"width":463},"localFile":null}}},{"__typename":"PrismicPostPostBodyHn","id":"deb686a0-aaab-50ab-a5a9-22e7a8881d21","primary":{"hn":{"text":"Architecture d'un site Gatsby","html":"<h2>Architecture d&#39;un site Gatsby</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"e03da8db-c4cc-5184-adef-613ca0b370a3","primary":{"rich_text":{"html":"<p>Gatsby est donc un framework React, essayons de voir ensemble son fonctionnement un peu plus en détail.<br /><br />/<br />|-- /.cache<br />|-- /public<br />|-- /src<br />    |-- /pages<br />    |-- /templates<br />|-- /static<br />|-- gatsby-config.js<br />|-- gatsby-node.js<br />|-- gatsby-ssr.js<br />|-- gatsby-browser.js</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"8a6264b8-a9f4-53b9-aab0-41c0076e1546","primary":{"hn":{"text":"Dossier /.cache","html":"<h3>Dossier /.cache</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"8c95a6cb-0bd3-5e70-aad0-310c6f4afe67","primary":{"rich_text":{"html":"<p>Généré automatiquement, ce dossier est un cache interne créé de manière automatique par Gatsby. Les fichiers et dossiers à l&#39;intérieur ne sont pas destinés à être modifié. Ce dossier devrait également être ajouté à votre fichier .gitignore si ce n&#39;est pas déjà fait. Si vous souhaitez vider le cache de votre application vous pouvez utiliser la commande suivante.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"e0f29ebb-e4f2-5bdc-9beb-2a1d571e7a3f","primary":{"code_snippet":{"text":"$ gatsby clean"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyHn","id":"90e0bc58-73d4-55ff-8c06-c2be15db4dc7","primary":{"hn":{"text":"Dossier /public","html":"<h3>Dossier /public</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"14dae797-fcce-5fb3-969a-e622254bfd64","primary":{"rich_text":{"html":"<p>C&#39;est un dossier qui sera généré après avoir lancé pour la première fois la commande <em>gatsby build.</em> Attention il est probable que vous obteniez une erreur <em>Mkdir permission denied </em>pour la création du dossier .cache, dans ce cas là, relancer votre invite de commande en tant qu&#39;administrateur.<br />C&#39;est ce dossier qui va contenir les fichiers générés, c&#39;est ce dossier que l&#39;on déposera sur le serveur pour que le client y accède.<br />Comme le .cache ce dossier doit être ajouté à votre .gitignore si ce n&#39;est pas déjà le cas. <em><br /></em></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"55e6b203-efbc-57f5-86c5-96618480c2d2","primary":{"hn":{"text":"Dossier /src","html":"<h3>Dossier /src</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"ff0f5ff2-8585-5aad-9ca7-f89b870428a5","primary":{"rich_text":{"html":"<p>Ce dossier va contenir toute la partie frontend de votre site, header, footer, layout, contenu de vos différentes pages. C&#39;est là que vous allez développer vos composants, comme vous le feriez dans n&#39;importe quelle application React.<br /></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"c8062470-7a90-53e6-8bea-6e3880810762","primary":{"hn":{"text":"Dossier /src/pages/","html":"<h4>Dossier /src/pages/</h4>"}}},{"__typename":"PrismicPostPostBodyText","id":"8b7eddf0-4f08-502b-9114-9a99c4c6a19a","primary":{"rich_text":{"html":"<p>Ici chaque fichier JS qui va contenir un composant React va devenir une page entière du site, pas besoin d&#39;outil de routing . Voici par exemple l&#39;exemple de ma page d&#39;accueil. <br />Ainsi si vous souhaitez créer une nouvelle page, il vous suffira donc de créer un fichier. <strong>Attention à bien nommer le fichier en respectant la convention de nommage kebab-case</strong>.<br />Ainsi si vous créer un fichier galerie.js dans le dossier page qui contient un composant React valide. Cela créera automatiquement une nouvelle page accessible à l&#39;adresse suivante <strong>http://localhost:8000/galerie</strong></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"8fe1f463-9267-50de-b61a-f914c2cc9ca8","primary":{"code_snippet":{"text":"import React from 'react'\n\nimport SEO from '../components/seo'\n\nconst IndexPage = () => (\n  <>\n    <SEO title=\"Home\" />\n    <h1>Bienvenue sur le site de Johan Petrikovsky </h1>\n    <p>Apprenti développeur compulsif.</p>\n    <p>Now go build something great.</p>\n  </>\n)\n\nexport default IndexPage\n"},"language":{"text":"jsx"}}},{"__typename":"PrismicPostPostBodyHn","id":"75410648-0f3f-5256-88cd-23694babc134","primary":{"hn":{"text":"Dossier /src/templates/","html":"<h4>Dossier /src/templates/</h4>"}}},{"__typename":"PrismicPostPostBodyText","id":"c746d438-0c4e-55f2-883b-9f7e71b709fb","primary":{"rich_text":{"html":"<p>Le dossier template va contenir l&#39;ensemble des pages construites dynamiquement, exemple dans le cadre d&#39;un blog, ce sera l&#39;ensemble des pages avec le détail de vos articles. Le template va donc correspondre à un modèle, et l&#39;ensemble des pages sera construit selon ce modèle.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"41f702a8-bad1-5b97-8dd5-3ab23342138b","primary":{"hn":{"text":"Fichier /gatsby-node.js","html":"<h3>Fichier /gatsby-node.js</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"5f6eb7fd-143f-5922-8401-feb7d85f15ad","primary":{"rich_text":{"html":"<p>C&#39;est ici que l&#39;on va dire à Gatsby de construire nos pages après avoir récupéré du contenu dynamiquement.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyText","id":"5cd258d1-b899-5952-84db-3e41f19ca4e1","primary":{"rich_text":{"html":"<p>C&#39;était un tour non exhaustif des fichiers et dossiers, pour plus d&#39;informations vous pouvez toujours vous rendre sur la <a  href=\"https://www.gatsbyjs.org/docs/gatsby-project-structure/\">doc officielle.</a></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"237baf1f-45e4-5b66-9133-2f2ccae9b498","primary":{"hn":{"text":"Prise en main de Prismic","html":"<h2>Prise en main de Prismic</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"3555baff-5f51-59e6-858e-ef02d1f77441","primary":{"rich_text":{"html":"<p>C&#39;est le moment de rendre notre site dynamique. Nous allons commencer par remplacer le contenu de notre page d&#39;accueil par du contenu récupérer dynamiquement sur Prismic. Allez donc sur <a  href=\"https://prismic.io/\">Prismic.io</a> pour créer un compte et votre premier repository.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"46e6ff23-91fd-5948-ba54-d6fb20c13a60","primary":{"hn":{"text":"Création d'un custom type","html":"<h3>Création d&#39;un custom type</h3>"}}},{"__typename":"PrismicPostPostBodyImage","id":"92c6a753-3f4c-5e1d-88e0-0b679009331f","primary":{"image":{"alt":"Créer un nouveau dépôt sur Prismic","dimensions":{"height":954,"width":846},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"012019ea-536b-55da-bd75-113c3ca147a7","primary":{"rich_text":{"html":"<p>Une fois créé votre dépôt devrait apparaître sur la page d&#39;accueil de votre tableau de bord </p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"b930ff2b-1fd9-5d09-a06b-4b8bad5878ff","primary":{"image":{"alt":"tableau de bord Prismic","dimensions":{"height":574,"width":1924},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"fa96cf29-c5d3-5b86-9335-9973ddcba78d","primary":{"rich_text":{"html":"<p>En accédant à votre dépôt vous allez pouvoir créer votre premier <em>Custom type</em>. <br />Un Custom type, c&#39;est un mot un peu fourre-tout pour définir les différents éléments que nous allons pouvoir créer. Par défaut chez WordPress vous disposez de pages et d&#39;articles, mais quid si vous souhaitez créer des événements, des annonces etc... vous allez devoir généralement installer des plugins, ou devoir développer les votre ce qui n&#39;est pas toujours simple.<br />Chez Prismic, nous partons de 0, nous allons créer uniquement ce dont nous avons besoin et de manière extrêmement simple. Que ce soit ici, côté <em>back</em> ou côté <em>front</em> pour récupérer nos données.<br />Il est à noter que nous avons deux types Repeatable et Single. Pour vous aider à choisir, <br /></p><ul><li>Si vous avez DES articles, DES produits, DES annonces, ce sera un type répétables.</li><li>En revanche si vous avez UNE page d&#39;accueil, UNE page contact, ce sera un type single.</li></ul><p>Attention aux pièges ! Vous pourriez avoir une page de mentions légales, et une page sur la politique de confidentialité. Mais si le gabarit de ses pages est identique, généralement un titre + un champ de texte long ; ce sera un type répétable, que vous pourriez appeler par exemple <em>page informations.</em><br /><br />Comme nous souhaitons toujours remplacer le contenu de notre page d&#39;accueil, sans plus attendre, créons donc un <em>Single Type</em> <em>Homepage.</em></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"694b7e1c-44b6-5bb4-82c7-dec72aa0a355","primary":{"image":{"alt":"Choisir son custom type avec Prismic","dimensions":{"height":911,"width":791},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"617946f0-52d5-5dfc-bde5-de0ec12f482d","primary":{"rich_text":{"html":"<p>Lorsque vous créer un nouveau champ, il y a plusieurs informations à saisir :<br /></p><ul><li><strong>AP ID</strong>  va correspondre à l&#39;identifiant qui sera utilisé lors de nos requetes graphQL</li><li><strong>Placeholder</strong>, sera plutôt une petite phrase d&#39;indice destiné à la personne qui va saisir le contenu </li><li>Et enfin le <strong>name</strong>, qui est simplement le nom de votre champ qui apparaîtra également pendant la saisie.<br /><br />Pour notre <strong>page d&#39;accueil</strong>, j&#39;ai opté pour <strong>4 champs</strong>.</li></ul><ol><li>Un identifiant unique - <em>uid</em> - de type <em>uid</em> - que j&#39;ai appelé <strong>uid</strong>. Pas du tout obligatoire, mais j&#39;ai pris l&#39;habitude d&#39;en avoir un pour chacun des types que je créé, on en reparlera plus tard si vous êtes sages.</li><li>Un titre de type - <em>title</em> - que j&#39;ai appelé <strong><em>title</em></strong></li><li>Une description de type - <em>Rich text</em> - que j&#39;ai appelé <strong>description</strong></li><li>Et enfin un champ image que j&#39;ai appelé <strong>main_illustration</strong></li></ol>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"567b961e-fec8-530c-ade2-0869408fd177","primary":{"image":{"alt":"Création de la homepage","dimensions":{"height":842,"width":1918},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"efb53603-c24f-5b38-9148-6f033ce2c349","primary":{"rich_text":{"html":"<p>Pour les flemmards ou si vous souhaitez suivre exactement ce tuto, vous avez la possibilité d&#39;utiliser la même configuration que moi. Pour ce faire copier le code JSON ci-dessous. Pour aller ensuite le coller dans la partie JSON Editor dans la colonne de droite (cf. capture précédente).<br />Ce JSON Editor peut être très utile pour partager des configurations entre différents projets et créer votre &quot;propre CMS&quot; Vous avez développé un module d&#39;actualité pour un projet, vous pouvez avec ce système le partager avec un autre projet sans problème.<br />On peut également imaginer la communauté créer des petits &quot;plugins&quot; et les partager facilement.</p><p>Nous aurons également besoin de ce fichier un peu plus tard pour faire communiquer <em>Gatsby</em> et <em>Prismic</em>. Sauvegardez donc ce fichier <em>homepage.json </em>dans <em>src/schemas (</em>il faut que votre fichier porte le même nom que votre custom type<em>)</em>. Si le dossier n&#39;existe pas, créez le.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"d9d89352-e3a4-5b39-b877-02e2a1d33016","primary":{"code_snippet":{"text":"{\n  \"Main\" : {\n    \"uid\" : {\n      \"type\" : \"UID\",\n      \"config\" : {\n        \"label\" : \"uid\",\n        \"placeholder\" : \"uid\"\n      }\n    },\n    \"title\" : {\n      \"type\" : \"StructuredText\",\n      \"config\" : {\n        \"single\" : \"heading1, heading2, heading3, heading4, heading5, heading6\",\n        \"label\" : \"title\",\n        \"placeholder\" : \"title\"\n      }\n    },\n    \"description\" : {\n      \"type\" : \"StructuredText\",\n      \"config\" : {\n        \"multi\" : \"paragraph, preformatted, heading2, heading3, heading4, heading5, heading6, strong, em, hyperlink, image, embed, list-item, o-list-item, o-list-item\",\n        \"allowTargetBlank\" : true,\n        \"label\" : \"description\",\n        \"placeholder\" : \"description\"\n      }\n    },\n    \"main_illustration\" : {\n      \"type\" : \"Image\",\n      \"config\" : {\n        \"constraint\" : { },\n        \"thumbnails\" : [ ],\n        \"label\" : \"main_illustration\"\n      }\n    }\n  }\n}"},"language":{"text":"json"}}},{"__typename":"PrismicPostPostBodyHn","id":"1f5f72f2-50c0-5d97-a5b4-a6efbc863a5f","primary":{"hn":{"text":"Création du contenu","html":"<h3>Création du contenu</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"ffa9352f-0294-5af8-a8f8-ecd307663387","primary":{"rich_text":{"html":"<p>Nous allons pouvoir créer notre première page. Dans la colonne de gauche de l&#39;interface d&#39;administration accéder au premier élément <em>content</em>, puis <em>create new</em></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"5852fa86-280d-5bc9-8698-57a8e92e8517","primary":{"image":{"alt":"création de contenu","dimensions":{"height":604,"width":1873},"localFile":null}}},{"__typename":"PrismicPostPostBodyText","id":"acd40739-5810-5601-8393-41fe57c6763c","primary":{"rich_text":{"html":"<p>Nous pouvons maintenant saisir le contenu de notre page d&#39;accueil. Pour sauvegarder, cela se passe en haut à droite, bouton <em>Save</em> , puis publish pour publier votre contenu. C&#39;est à dire que lorsque vous allez appuyer sur le bouton Save, votre contenu est sauvegardé, mais le build (l&#39;appel du web hook) ne sera pas déclenché.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"e3f4534b-fc84-5cac-b38c-2ee38116eb50","primary":{"image":{"alt":"saisir du contenu dans Prismic","dimensions":{"height":864,"width":1842},"localFile":null}}},{"__typename":"PrismicPostPostBodyHn","id":"806d1bd2-5ab5-5b42-939f-78a510313b3f","primary":{"hn":{"text":"Lier Gatsby avec Prismic","html":"<h2>Lier Gatsby avec Prismic</h2>"}}},{"__typename":"PrismicPostPostBodyText","id":"4636aeb8-1d59-56ff-90f7-db8219899f93","primary":{"rich_text":{"html":"<p>OK notre back-office est en place, la partie front également, il n&#39;y a plus qu&#39;à connecter les deux. Cela va se faire en deux étapes : </p><ul><li>Installation du plugin pour récupérer le contenu.</li><li>Création de notre requête GraphQL.</li></ul>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyHn","id":"cf55dcc0-d342-5c06-85ca-c44744ee57e2","primary":{"hn":{"text":"Installation du plugin gatsby-source-prismic","html":"<h3>Installation du plugin gatsby-source-prismic</h3>"}}},{"__typename":"PrismicPostPostBodyText","id":"feb5f7e5-c235-5c0c-8d18-e46ef23abe69","primary":{"rich_text":{"html":"<p>A la racine de votre projet saisir la commande suivante pour installer votre plugin</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"77531714-41d4-5d0d-a46f-90ac4f175f26","primary":{"code_snippet":{"text":"$ npm install --save gatsby-source-prismic"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyText","id":"145ec461-60e4-5410-ba87-e13829acb1fa","primary":{"rich_text":{"html":"<p>Le plugin est installé dans notre dossier node module, pour le faire communiquer avec Gatsby il va falloir éditer notre fichier <em>gatsby-config.js</em> à la racine du projet. et ajouter une entrée à array plugins</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"57e5b0c6-c8ab-5e40-873f-85658f794445","primary":{"code_snippet":{"text":"// Dans votre fichier gatsby-config.js\nplugins: [\n    {\n      resolve: 'gatsby-source-prismic',\n      options: {\n        // Le nom de votre dépôt prismic.io. ce champ est obligatoire\n        // Example: 'tuto-gatsby' si votre adresse est 'tuto-gatsby.prismic.io'\n        repositoryName: 'tuto-gatsby',       \n        accessToken: `votre_token_prismic`,\n        // Récupérer le fichier json de homepage dans Prismic (Json Editor, cf. plus haut)\n        schemas: {\n          homepage: require('./src/schemas/homepage.json'),\n        },\n      },\n    },\n\n   // Vos autres plugin....\n]\n"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyText","id":"c6befcdc-742f-5eea-9bb5-e0d0ed8f85ec","primary":{"rich_text":{"html":"<p><strong>ATTENTION</strong> : Le fait d&#39;ajouter notre token ici n&#39;est pas la manière la plus sécurisée, ne poussez pas en l&#39;état votre application sur un dépôt public. Nous verrons plus tard comment sécuriser au mieux notre application.<br />Le fichier homepage.json correspond au fichier que nous avons créer précédemment au moment de la création de notre custom type.</p><p></p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyText","id":"e8a75b23-2d3e-50c4-8db2-252cc323d5b7","primary":{"rich_text":{"html":"<p>Si tout s&#39;est bien déroulé, vous devriez avoir accès à l&#39;adresse suivante - <a  href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> -  C&#39;est ici que nous allons pouvoir définir la requête pour récupérer notre contenu, il suffit simplement de sélectionner les champs dans la colonne de gauche et appuyer sur play pour voir si tout s&#39;est bien déroulé</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyImage","id":"6a277506-2571-53a3-a3c7-3b93f9e8cf3a","primary":{"image":{"alt":"code source ","dimensions":{"height":1015,"width":1919},"localFile":null}}},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"23a6e39d-7a22-5c92-abb7-91cb4eb98ae5","primary":{"code_snippet":{"text":"query MyQuery {\n  prismicHomepage {\n    data {\n      description {\n        html\n      }\n      title {\n        text\n      }\n      main_illustration {\n        fluid {\n          srcWebp\n          srcSetWebp\n          srcSet\n          src\n          sizes\n          base64\n          aspectRatio\n        }\n      }\n    }\n  }\n}\n"},"language":{"text":"graphql"}}},{"__typename":"PrismicPostPostBodyText","id":"88df24cc-d1d3-52c4-9eea-512eca199e05","primary":{"rich_text":{"html":"<p>Ok nous avons notre requête  GraphQL, le plus gros du travail est fait il n&#39;y a plus qu&#39;à l&#39;intégrer dans notre page d&#39;accueil. Nous allons donc ouvrir notre fichier index.js et y ajouter la requête</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"456d75bc-f12a-53f5-ac72-12cc2a2ddcdc","primary":{"code_snippet":{"text":"// FICHIER index.js\nimport React from \"react\"\n// En plus de link on importe graphql\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\n// On ajoute notre props data\n// Résultat de notre requête GraphQL\nconst IndexPage = ({data}) => (\n  <Layout>\n    {console.log(data)}\n    <SEO title=\"Home\" />\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\n// Consommer de la data avec GraphQL\nexport const pageQuery = graphql`\n\nquery MyHomeQuery {\n  prismicHomepage {\n    id\n    data {\n      description {\n        html\n      }\n      title {\n        text\n      }\n      main_illustration {\n        alt\n        copyright\n        url\n        thumbnails\n        fluid {\n          srcWebp\n          srcSetWebp\n          srcSet\n          src\n          sizes\n          base64\n          aspectRatio\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyText","id":"9a089d3f-ca1d-5a4c-b7a4-6bd27ea53ec1","primary":{"rich_text":{"html":"<p>Si tout s&#39;est bien passé,  le console.log devrait retourner un objet avec l&#39;ensemble de nos infos. Il n&#39;y a plus qu&#39;à utiliser cet objet pour afficher les différentes infos.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"d1e0d052-6879-5bf8-b418-cc1059238367","primary":{"code_snippet":{"text":"import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\n// On importe Gatsby image\nimport Img from 'gatsby-image'\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    {console.log(data)}\n    <SEO title=\"Home\" />\n    <h1>{data.prismicHomepage.data.title.text}</h1>\n    <div dangerouslySetInnerHTML={{__html: data.prismicHomepage.data.description.html}} />\n    <Img\n        style={{ maxWidth: '270px' }}\n        fluid={data.prismicHomepage.data.main_illustration.fluid}\n      />\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport const pageQuery = graphql`\n\nquery MyHomeQuery {\n  prismicHomepage {\n    id\n    data {\n      description {\n        html\n      }\n      title {\n        text\n      }\n      main_illustration {\n        alt\n        copyright\n        url\n        thumbnails\n        fluid{\n          srcWebp\n          srcSetWebp\n          srcSet\n          src\n          sizes\n          base64\n          aspectRatio\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n"},"language":{"text":"javascript"}}},{"__typename":"PrismicPostPostBodyText","id":"40e32f41-d4fd-5f13-808a-7c83416488f1","primary":{"rich_text":{"html":"<p>Ok nous pouvons désormais tester les performances de notre site.  Nous allons donc utiliser la commande pour demander à Gatsby de construire nos pages et de nous les servir. L&#39;ajout de -o permet seulement de demander à Gatsby de l&#39;ouvrir directement dans le navigateur.</p>"}},"slice_type":"text"},{"__typename":"PrismicPostPostBodyCodeSnippet","id":"9b05832a-18c8-5200-afe3-1b9515394d5f","primary":{"code_snippet":{"text":"$ gatsby build\n$ gatsby serve -o"},"language":{"text":"vim"}}},{"__typename":"PrismicPostPostBodyImage","id":"c671578c-ca19-55cb-ac19-800594e81243","primary":{"image":{"alt":"Test des performances d'un site Gatsby","dimensions":{"height":902,"width":1567},"localFile":null}}}],"post_hero_image":{"alt":"Gatsby","dimensions":{"height":657,"width":996},"localFile":null}}}},"pageContext":{"uid":"creer-son-site-avec-gatsby-et-prismic","category":"gatsby"}}